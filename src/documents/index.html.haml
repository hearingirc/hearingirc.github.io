---
layout: "default"
priority: 0.8
---

%article#about
  .container
    .row.box.dark
      .seven.columns
        .welcome-container
          %h1 Hearing Industry Research Consortium
          %p
            The purpose of the Hearing Industry Research Consortium is to develop and direct a non-competitive, mutually agreed upon research agenda that benefits the hearing aid industry, its customers, and end-users.
          %a.button.featured.animate{href: "#requests"} View Request for Proposals
      .nine.columns
        .flexslider.animation-speed-slow.delay-between-slides-long.hide-controls
          %ul.slides{style: "height: 280px;"}
            %li{style: "width: 100%; float: left; margin-right: -100%; display: list-item;"}
              %img{src: "img/listening2.png", width: "520", height: "280"}
            %li{style: "width: 100%; float: left; margin-right: -100%; display: none;"}
              %img{src: "img/listening4.png", width: "520", height: "280"}
    .row
      %h2 Here’s How We Pursue Our Purpose
    .row
      .one-third.column
        %p
          %img.alignleft.size-full{title: "one", src: "img/one.png", alt: "One", width: "70", height: "70"}
        %h4 Identify
        %p
          Identifying non-competitive research topics, initiating requests for proposals (RFPs) in topic areas, and funding appropriate proposals
      .one-third.column
        %p
          %img.alignleft.size-full{title: "two", src: "img/two.png", alt: "Two", width: "70", height:"70"}
        %h4 Support
        %p Supporting Educational Initiatives (e.g. research conferences)
      .one-third.column
        %p
          %img.alignleft.size-full{title: "three", src: "img/three.png", alt: "Three", width: "70", height: "70"}
        %h4 Create
        %p Co-authoring Research Consortium position papers and conference presentations
      .bottom-gradient.between-rows
        %span.left
        %span.center
        %span.right
      %h2 Who We Are
      .one-third.column
        %p
          %img.alignleft.size-full{title: "Andrew Dittberner", src: "img/4.jpg", alt: "Andrew Dittberner", width: "74", height: "99"}
        %h4 Andrew Dittberner
        %p
          %img.alignnone.size-full{title: "gn_resound", src: "img/gn_resound.png", alt: "", width: "172", height: "50"}
      .one-third.column
        %h4
          %img.alignleft.size-full{title: "Brent Edwards", src: "img/51.jpg", alt: "", width: "74", height: "99"}
          Brent Edwards
        %p
          %img.alignnone.size-full{title: "starkey", src: "img/starkey.png", alt: "", width: "130", height: "80"}
      .one-third.column
        %h4
          %img.alignleft.size-full{title: "Graham Naylor", src: "img/1.jpg", alt: "Graham Naylor", width: "74", height: "99"}
          Graham Naylor
        %p
          %img.alignnone.size-full{title: "oticon", src: "img/oticon.png", alt: "", width: "172", height: "80"}
    .row
      .one-third.column
        %h4
          %img.size-full.alignleft{title: "default", src: "img/JB.jpg", alt: "", width: "74", height: "99"}
          Joel Beilin
        %p
          %img.alignnone.size-full{title: "Siemens", src: "img/Siemens.png", alt: "", width: "172", height: "57"}
      .one-third.column
        %h4
          %img.alignleft.size-full{title: "Lars Sunesen", src: "img/3.jpg", alt: "Lars Sunesen", width: "74", height: "99"}
          Lars Sunesen
        %p
          %img.alignnone.size-full{title: "widex", src: "img/widex.png", alt: "", width: "172", height: "50"}
      .one-third.column
        %h4
          %img.alignleft.size-full{title: "Stefan Launer", src: "img/stefan.jpg", alt: "Stefan Launer", width: "74", height: "99"}
          Stefan Launer
        %p
          %img.alignnone.size-full{title: "Phonak", src: "img/Phonak.png", alt: "", width: "130", height: "39"}
        %p &nbsp;
%article#news.dark
  .container
    .sixteen.columns.titleset
      %h2.remove-bottom Latest News
      %h6.subheader
    %ul.display-posts-listing
      :each newsItem in getCollection("newsItems").toJSON()
        %li.listing-item
          %a{href: "!{newsItem.url}"}= newsItem.title
          %span.date= ' (' + moment(newsItem.date).format('L') + ') - '
          %span.excerpt=  newsItem.summary
    %p
      %a{href: "/news"} View All News
%article#requests
  .container
    .accepting-proposals
      .row
        .sixteen.columns.titleset
          %h2.remove-bottom Current Request for Proposals
          %h4 Get started here to get your proposal sent in. Follow the three steps below and your proposal will be processed as soon as possible.
      .row
        .sixteen.columns
          %ol.proposalsteps
            %li
              %h3
                %a{href: "/downloads/current_rfp.doc", target: "_blank"} Request for Proposal Document
              %p
                First, it is important that you download and read the RFP document prior to filling out your application form.
              %p
                %a{href: "/downloads/current_rfp.doc", target: "_blank"} Download Request for Proposal Document


            %li
              %h3
                %a{href: "/downloads/grant_application_form.doc", target: "_blank"} Grant Application Form
              %p
                After reading the RFP document, please download and fill out the Grant Application Form.
              %p
                %a{href: "/downloads/grant_application_form.doc", target: "_blank"} Download Grant Application Form

            %li
              %h3
                %a.expand{href: "#submissionform"}RFP Submission Form
              %p
                Once you've read the RFP doc and completed the Grant Application form, upload your form via the RFP Submission Form.
              %p
                %a.expand.submission{href: "#submissionform"}RFP Submission Form

          %p
        .sixteen.columns.wufooform
          #wufoo-zbsmevu19u5xc3.wufoo.closed
            Fill out my
              %a{href: "https://hearingirc.wufoo.com/forms/zbsmevu19u5xc3"} online form
            :javascript
              var zbsmevu19u5xc3;(function(d, t) {
              var s = d.createElement(t), options = {
              'userName':'hearingirc',
              'formHash':'zbsmevu19u5xc3',
              'autoResize':true,
              'height':'320',
              'async':true,
              'host':'wufoo.com',
              'header':'show',
              'ssl':false};
              s.src = ('https:' == d.location.protocol ? 'https://' : 'http://') + 'wufoo.com/scripts/embed/form.js';
              s.onload = s.onreadystatechange = function() {
              var rs = this.readyState; if (rs) if (rs != 'complete') if (rs != 'loaded') return;
              try { zbsmevu19u5xc3 = new WufooForm();zbsmevu19u5xc3.initialize(options);zbsmevu19u5xc3.display(); } catch (e) {}};
              var scr = d.getElementsByTagName(t)[0], par = scr.parentNode; par.insertBefore(s, scr);
              })(document, 'script');
    .not-accepting-proposals
      .row
        .sixteen.columns.titleset
          %h2 Request for Proposals
          %h4 There is not a Request for Proposal open right now.
          %p
            However, you can enter your email below and we will email you when we announce the dates and availability of the next one!

          <form action="https://madmimi.com/signups/subscribe/102951" id="mad_mimi_signup_form" method="post" target="_blank" class="send-with-ajax">
              <div class="nine columns omega">
                  <input id="signup_email" name="signup[email]" type="text" data-required-field="This field is required" placeholder="you@example.com"/>
              </div>
              <div class="seven columns omega">
                  <input type="submit" class="submit" value="Sign Me Up!" id="webform_submit_button" data-default-text="Subscribe" data-submitting-text="Sending…" data-invalid-text="↑ You forgot some required fields" data-choose-list="↑ Choose a list"></input>
              </div>
          </form>





  .container
    .row
      .sixteen.columns.previous-grants
        %h2 Previous Awards

        .annual-rfp
          %h3 2013

          %dl.dl-horizontal
            %dt Topic
            %dd
              %a(href="/downloads/rfp_archive/2013_perception_of_dynamic_spatial_listening_scenarios_rfp.doc") Perception of Dynamic Spatial Listening Scenarios
            %dt Recipients
            %dd
              %ul.grant-recipients.list-inline
                %li.recipient TBA

        %hr
        .annual-rfp
          %h3 2012

          %dl.dl-horizontal
            %dt
              Topic
            %dd
              %a(href="/downloads/rfp_archive/2012_cognition_rfp.doc") Cognition
            %dt Recipients
            %dd
              %ul.grant-recipients.list-inline
                %li.recipient Piers Dawes, Ph.D
                %li.recipient Andrea Pittman, Ph.D
            %dt Announcement
            %dd
              %a.announcement(href="/news/announcing-the-first-irc-grant-recipients") Announcing the First IRC Grant Recipients

:javascript
  (function() {
    var form = document.getElementById('mad_mimi_signup_form'),
        submit = document.getElementById('webform_submit_button'),
        validEmail = /.+@.+\..+/,
        isValid;

    form.onsubmit = function(event) {
      validate();
      if(!isValid) {
        revalidateOnChange();
        return false;
      }
    };

    function validate() {
      isValid = true;
      emailValidation();
      fieldAndListValidation();
      updateFormAfterValidation();
    }

    function emailValidation() {
      var email = document.getElementById('signup_email');
      if(!validEmail.test(email.value)) {
        textFieldError(email);
        isValid = false;
      } else {
        removeTextFieldError(email);
      }
    }

    function fieldAndListValidation() {
      var fields = form.querySelectorAll('.mimi_field.required');
      for(var i = 0; i < fields.length; ++i) {
        var field = fields[i],
            type  = fieldType(field);
        if(type == 'checkboxes' || type == 'radio_buttons') {
          checkboxAndRadioValidation(field);
        } else {
          textAndDropdownValidation(field, type);
        }
      }
    }

    function fieldType(field) {
      var type = field.querySelectorAll('.field_type');
      if(type.length > 0) {
        return type[0].getAttribute('data-field-type');
      } else if(field.className.indexOf('checkgroup') >= 0) {
        return 'checkboxes';
      } else {
        return 'text_field';
      }
    }

    function checkboxAndRadioValidation(field) {
      var inputs   = field.getElementsByTagName('input'),
          selected = false;
      for(var i = 0; i < inputs.length; ++i) {
        var input = inputs[i];
        if((input.type == 'checkbox' || input.type == 'radio') && input.checked) selected = true;
      }
      if(selected) {
        field.className = field.className.replace(/ invalid/g, '');
      } else {
        if(field.className.indexOf('invalid') == -1) field.className += ' invalid';
        isValid = false;
      }
    }

    function textAndDropdownValidation(field, type) {
      var inputs = field.getElementsByTagName('input');
      for(var i = 0; i < inputs.length; ++i) {
        var input = inputs[i];
        if(input.name.indexOf('signup') >= 0) {
          if(type == 'text_field') {
            textValidation(input);
          } else {
            dropdownValidation(field, input);
          }
        }
      }
      htmlEmbedDropdownValidation(field);
    }

    function textValidation(input) {
      if(input.id == 'signup_email') return;
      var val = input.value;
      if(val == '') {
        textFieldError(input);
        isValid = false;
        return;
      } else {
        removeTextFieldError(input)
      }
    }

    function dropdownValidation(field, input) {
      var val = input.value;
      if(val == '') {
        if(field.className.indexOf('invalid') == -1) field.className += ' invalid';
        onSelectCallback(input);
        isValid = false;
        return;
      } else {
        field.className = field.className.replace(/ invalid/g, '');
      }
    }

    function htmlEmbedDropdownValidation(field) {
      var dropdowns = field.querySelectorAll('.mimi_html_dropdown');
      for(var i = 0; i < dropdowns.length; ++i) {
        var dropdown = dropdowns[i],
            val      = dropdown.value;
        if(val == '') {
          if(field.className.indexOf('invalid') == -1) field.className += ' invalid';
          isValid = false;
          dropdown.onchange = validate;
          return;
        } else {
          field.className = field.className.replace(/ invalid/g, '');
        }
      }
    }

    function textFieldError(input) {
      input.className   = 'required invalid';
      input.placeholder = input.getAttribute('data-required-field');
    }

    function removeTextFieldError(input) {
      input.className   = 'required';
      input.placeholder = '';
    }

    function onSelectCallback(input) {
      if(typeof Widget != 'undefined' && Widget.BasicDropdown != undefined) {
        var dropdownEl = input.parentNode,
            instances  = Widget.BasicDropdown.instances;
        for(var i = 0; i < instances.length; ++i) {
          var instance = instances[i];
          if(instance.wrapperEl == dropdownEl) {
            instance.onSelect = validate;
          }
        }
      }
    }

    function updateFormAfterValidation() {
      form.className   = isValid ? '' : 'mimi_invalid';
      submit.value     = submitButtonText();
      submit.disabled  = !isValid;
      submit.className = isValid ? 'submit' : 'disabled';
    }

    function submitButtonText() {
      var invalidFields = document.querySelectorAll('.invalid'),
          text;
      if(isValid || invalidFields == undefined) {
        text = submit.getAttribute('data-default-text');
      } else {
        if(invalidFields.length > 1 || invalidFields[0].className.indexOf('checkgroup') == -1) {
          text = submit.getAttribute('data-invalid-text');
        } else {
          text = submit.getAttribute('data-choose-list');
        }
      }
      return text;
    }

    function revalidateOnChange() {
      var fields = form.querySelectorAll(".mimi_field.required");
      for(var i = 0; i < fields.length; ++i) {
        var inputs = fields[i].getElementsByTagName('input');
        for(var j = 0; j < inputs.length; ++j) {
          inputs[j].onchange = validate;
        }
      }
    }
  })();
